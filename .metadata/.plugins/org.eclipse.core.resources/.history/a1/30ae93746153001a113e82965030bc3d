package com.microservices.example.app.zuul.filters;

import javax.servlet.http.HttpServletRequest;

import org.springframework.stereotype.Component;
import com.netflix.zuul.ZuulFilter;
import com.netflix.zuul.context.RequestContext;
import com.netflix.zuul.exception.ZuulException;

@Component
public class preTimeFilter extends ZuulFilter{
	
	// Alguna validación para ejecutar el filtro (en este caso, siempre se va a ejecutar - true)
	@Override
	public boolean shouldFilter() {
		return true;
	}
	
	// Resuelve la lógica del filtro
	@Override
	public Object run() throws ZuulException {
		RequestContext ctx = RequestContext.getCurrentContext();
		HttpServletRequest req = ctx.getRequest();
		
		Long timepoInicio = System.currentTimeMillis();
		req.setAttribute("timepoInicio", timepoInicio);
	}
	
	// Pre
	@Override
	public String filterType() {
		return "pre";
	}

	@Override
	public int filterOrder() {
		return 1;
	}

}
